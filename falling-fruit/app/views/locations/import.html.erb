<h1>Import Locations from CSV</h1>

<% unless @errors.nil? %>
Errors:
<ul style="color: red;">
<% @errors.each{ |e| %>
<li><%= e.collect{|field,err| "#{field}: #{err}" }.join(";") %><br>
<% } %>
</ul>
<% end %>

<details>
  <summary>Show instructions</summary>
  <p>This is an admin-only function for doing bulk imports of locations. It assumes a comma seperated values (CSV) file with the following fields:</p>

  <blockquote style="font-family:Courier;">
  <%= Location.csv_header.join(", ") %>
  </blockquote>
  <p><b>Ids:</b> Unique identifiers of the corresponding location(s) in the original data source, as a comma seperated list (e.g. "ID1, ID2"). For data without a unique identifer, row order should be used instead.</p>
  <p><b>Types:</b> The types of each location, in the format "id: English common name [scientific name]", or any subset of those parts (e.g. "id", "[scientific name]", etc). If the name does not match an <%= link_to types_path do %>existing type<% end %>, a new pending type is created. If the name matches multiple existing types, an error is returned. Separate multiple types with commas (eg. "Apple [Malus domestica], U-pick").</p>
  <p><b>Description:</b> Whatever information should be displayed in the location's infobox (location details, access issues, plant health, etc). &lt;br&gt; (HTML line break) tags are converted to \n (newline) characters. No other markup is currently supported.</p>
  <p><b>Lat/Lng:</b> Latitude and longitude in decimal degrees (WGS84).</p>
  <p><b>Address:</b> Full street address of the location (number, street, city, state / province, zip code, country). It is geocoded and converted to coordinates, so don't provide an address if you are already providing Lat and Lng.</p>
  <p><b>Season Start/Stop:</b> Months that harvesting begins and ends, respectively, with 1 corresponding to January and 12 corresponding to December.</p>
  <p><b>No Season:</b> Whether season does not apply (eg. Rosemary). Mark 'x', 't', or 'true' if true (no season), otherwise leave blank.</p>
  <p><b>Access:</b> Access status of the location, on a scale from 1 to 5:</p>
    <blockquote>
    <% I18n.translate("locations.infowindow.access_mode").each_index{ |i| %>
    <li><%= i + 1 %>: <%= I18n.translate("locations.infowindow.access_mode")[i] %>
    <% } %>
    </blockquote>
  <p><b>Unverified:</b> Whether the location or identity of one or more of the sources at the location have not been verified. Mark 'x', 't', or 'true' if true (unverified), otherwise leave blank.</p>
  <p><b>Yield/Quality Rating:</b> The productivity and tastiness of the sources at the location, on a scale from 1 to 5:</p>
    <blockquote>
    <% I18n.translate("locations.infowindow.rating").each_index{ |i| %>
    <li><%= i + 1 %>: <%= I18n.translate("locations.infowindow.rating")[i] %>
    <% } %>
    </blockquote>
  <p><b>Author:</b> Author of the location, as displayed on the map. If left blank, the author is "Anonymous".</p>
  <p><b>Photo URL:</b> Full path to a photo of the location. A review will be created with the photo added.</p>
</details>

<br/>
<%= form_for :import, :html => {:multipart => true} do |f| %>
  <%= fields_for :import do |f2| %>
    <div class="field">
      <%= f.label :name %><br />
      <%= f.text_field :name, :size => "80" %>
    </div>
    <div class="field">
      <%= f.label :url %><br />
      <%= f.text_field :url, :size => "80" %>
    </div>
    <div class="field">
      <%= f.label :comments %><br />
      <%= f.text_area :comments, :size => "80x10" %>
    </div>
    <div class="field">
      <%= f.label :license %><br />
      <%= f.text_area :license, :size => "80x10" %>
    </div>
    <div class="field">
      <%= f.check_box :muni %> <%= f.label :municipal %>
    </div>
    <div class="field">
      <%= f.check_box :autoload, :checked => true %> <%= f.label :autoload %>
    </div>
    <div class="field">
      <%= f.check_box :auto_cluster %> <%= f.label :increment_clusters %>
    </div>
    <div class="field">
      <%= f.check_box :reverse_geocode %> <%= f.label :reverse_geocode %>
    </div>
    <div class="field">
      <%= f.label :default_categories %><br />
      <%= select_tag(:default_categories, options_for_select(Type::Categories.each_with_index.collect{ |v,i| [v.capitalize,v] }, []),:multiple => true) %>
    </div>
  <% end %>
  <div class="field">
    <%= file_field_tag :csv %>
  </div>
  <div class="field">
    <%= f.submit "Upload" %>
  </div>

<% end %>
